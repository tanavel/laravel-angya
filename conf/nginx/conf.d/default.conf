#================================================#
# Syntax:  server { ... }
# Default: —
# Context: http
# Description:
#   仮想サーバに関するコンテキスト。
#   複数定義することもできる。
#================================================#
server {
    #================================================#
    # Syntax:
    #   listen port|address[:port] [default_server] [ssl] [http2 | spdy] [proxy_protocol] [setfib=number] [fastopen=number] [backlog=number] [rcvbuf=size] [sndbuf=size] [accept_filter=filter] [deferred] [bind] [ipv6only=on|off] [reuseport] [so_keepalive=on|off|[keepidle]:[keepintvl]:[keepcnt]];
    # Default: listen *:80 | *:8000;
    # Context: server
    # Description:
    #   仮想サーバがlistenするport、またはIPアドレス。
    #   [::]:80はIPv6用の定義。
    #================================================#
    listen      80;
    listen [::]:80;

    #================================================#
    # Syntax: server_name name ...;
    # Default: server_name "";
    # Context: server
    # Description:
    #   仮想サーバ名。
    #   リクエストのHostヘッダを評価して振り分けるために使う。
    #   listen、server_nameの組み合わせにマッチしないリクエストだったら、
    #   default_serverで処理される。
    #   default_serverというのは一番最初に定義されているserverコンテキストの仮想サーバ、
    #   または明示的にdefault_serverとしてマークされている仮想サーバのこと。
    #   開発中のローカルならlocalhostでいいけど、本番稼働していてドメイン名がついている場合は大丈夫なの？って思ったけど、
    # 他のserverコンテキストがない限り、localhostがdefault_serverで処理されるから、
    # localhostで大丈夫なんだと思う。
    #================================================#
    server_name localhost;

    #================================================#
    # Syntax:
    #   location [ = | ~ | ~* | ^~ ] uri { ... }
    #   location @name { ... }
    # Default: —
    # Context: server, location
    # Description:
    #   リクエストURIに応じた設定をするコンテキスト。
    #   正規表現を使わない場合、前方一致で最も一致するlocationが使われる。
    #   この後に正規表現が評価され、一致するものが無ければ前方一致で最も一致するlocationを使う。
    #   正規表現を使いたい場合、下記が使用できる。
    #     - [~]:  大文字小文字を区別する
    #     - [~*]: 大文字小文字を区別しない)
    #     - [=]:  完全一致
    #     - [^~]: 前方一致。一致したら他の正規表現を評価しない。
    #   リクエストがproxy_passやfastcgi_passなどで処理される場合、
    #   locationで指定したURIの末尾にスラッシュが付くかどうかで挙動が変わるので注意。
    #   locationが[/path]であれば、普通に前方一致で評価される。
    #   localtionが[/path/]であれば、[/path]でアクセスすると301リダイレクトが発生するなど。
    #================================================#
    location / {

        #================================================#
        # Syntax:  root path;
        # Default: root html;
        # Context: http, server, location, if in location
        # Description:
        #   リクエストのルートディレクトリを定義。
        #================================================#
        root /var/www/tanavel-angya/public;

        #================================================#
        # Syntax:  index file ...;
        # Default: index index.html;
        # Context: http, server, location
        # Description:
        #   indexとして使われるファイルを指定する。
        #   indexとはファイルを指定せずにリクエストした時に返すファイルのこと。
        #   あんまりないと思うが内部リダイレクトが発生して意図しないlocationの設定が適用される場合があるので注意。
        #================================================#
        index index.php;
    }

    location ~ \.php$ {

        root /var/www/tanavel-angya/public;

        #================================================#
        # Syntax:  fastcgi_pass address;
        # Default: —j
        # Context: location, if in location
        # Description:
        #   FastCGIサーバのアドレスの指定。
        #   docker-compose.yml内のphp-fpmのサービス名を指定しておけばdockerネットワーク内で名前解決してくれる。
        #================================================#
        fastcgi_pass app:9000;

        #================================================#
        # Syntax:  fastcgi_index name;
        # Default: —
        # Context: http, server, location
        # Description:
        #   リクエストの末尾がスラッシュで終わっている時に使われるファイルの指定。
        #================================================#
        fastcgi_index index.php;

        #================================================#
        # Syntax: fastcgi_param parameter value [if_not_empty];
        # Default:—
        # Context:http, server, location
        # Description:
        #   FastCGIサーバに渡すパラメータの設定。
        #   例として[SCRIPT_FILENAME]は実行するPHPファイルを指定するために使われる。
        #================================================#
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;

        include        fastcgi_params;
    }
}
